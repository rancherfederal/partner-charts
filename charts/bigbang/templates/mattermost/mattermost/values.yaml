{{- if .Values.addons.mattermost.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.addons.mattermost "name" "mattermost" "defaults" (include "bigbang.defaults.mattermost" .)) }}
{{- end }}

{{- define "bigbang.defaults.mattermost" -}}
hostname: {{ .Values.hostname }}

istio:
  enabled: {{ .Values.istio.enabled }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}

{{- with .Values.addons.mattermost.sso }}
sso:
  enabled: {{ .enabled }}
  client_id: {{ .client_id }}
  client_secret: {{ .client_secret | default "no-secret" }}
  auth_endpoint: {{ .auth_endpoint | default (printf "https://%s/oauth/authorize" $.Values.sso.oidc.host) }}
  token_endpoint: {{ .token_endpoint | default (printf "https://%s/oauth/token" $.Values.sso.oidc.host) }}
  user_api_endpoint: {{ .user_api_endpoint | default (printf "https://%s/api/v4/user" $.Values.sso.oidc.host) }}
{{- end }}

global:
  imagePullSecrets:
    - name: private-registry

{{- with .Values.addons.mattermost.enterprise }}
enterprise:
  enabled: {{ .enabled }}
  license: {{ .license }}
{{- end }}

{{- with .Values.addons.mattermost.database }}
{{- if and .username .password .host .port .database }}
database:
  secret: "mattermost-database-secret"
{{- else }}

postgresql:
  image:
    pullSecrets:
      - private-registry
  install: true
{{- end }}
{{- end }}

{{- with .Values.addons.mattermost.objectStorage }}
{{- if and .endpoint .accessKey .accessSecret .bucket }}
fileStore:
  secret: "mattermost-objectstorage-secret"
  url: {{ .endpoint }}
  bucket: {{ .bucket }}
{{- else }}
minio:
  install: true
  accessKey: {{ .accessKey | default "minio" }}
  secretKey: {{ .secretKey | default "BigBangDEVONLY" }}
  imagePullSecrets:
    - name: private-registry
{{- end }}
{{- end }}

{{- if .Values.addons.mattermost.elasticsearch.enabled }}
elasticsearch:
  enabled: true
{{- end }}
{{- end -}}
