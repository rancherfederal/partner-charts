{{- if .Values.monitoring.enabled }}
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: monitoring
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    {{- include "commonLabels" . | nindent 4}}
spec:
  targetNamespace: monitoring
  chart:
    spec:
      chart: {{ .Values.monitoring.git.path }}
      interval: 5m
      sourceRef:
        kind: GitRepository
        name: monitoring
        namespace: {{ .Release.Namespace }}

  {{- with .Values.flux }}
  interval: {{ .interval }}
  test:
    enable: false
  install:
    remediation:
      retries: {{ .install.retries }}
  upgrade:
    remediation:
      retries: {{ .upgrade.retries }}
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: {{ .rollback.timeout }}
    cleanupOnFail: {{ .rollback.cleanupOnFail }}
  {{- end }}

  valuesFrom:
    - name: values
      kind: Secret
      valuesKey: "monitoring.yaml"

  values:
    hostname: {{ .Values.hostname }}
    istio:
      enabled: {{ .Values.istio.enabled }}
    {{- if .Values.monitoring.sso.enabled }}
      prometheus:
        enabled: true
        service: authservice-haproxy-sso
        port: 8080
        namespace: authservice
      alertmanager:
        enabled: true
        service: authservice-haproxy-sso
        port: 8080
        namespace: authservice
      grafana:
        enabled: true
    {{- end }}
    sso:
      enabled: {{ .Values.monitoring.sso.enabled }}
    global:
      imagePullSecrets:
      - name: private-registry
    grafana:
      image:
        pullSecrets:
        - private-registry
      grafana.ini:
{{- if .Values.istio.enabled }}
        server:
          root_url: https://grafana.{{ .Values.hostname }}/
{{- end }}
        auth: 
          signout_redirect_url: https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/logout
        auth.generic_oauth:
          enabled: {{ .Values.monitoring.sso.enabled }}
          client_id: {{ .Values.monitoring.sso.grafana.client_id }}
          client_secret: {{ .Values.monitoring.sso.grafana.client_secret }}
          scopes: {{ .Values.monitoring.sso.grafana.scopes | default "openid profile email" }}
          auth_url: https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/auth
          token_url: https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/token
          api_url: https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/userinfo
          allow_sign_up: {{ .Values.monitoring.sso.grafana.allow_sign_up | default "True" }}
          role_attribute_path: {{ .Values.monitoring.sso.grafana.role_attribute_path | default "Viewer" }}

    prometheus-node-exporter:
      serviceAccount:
        imagePullSecrets:
        - name: private-registry
      {{- if .Values.openshift }}
      service: 
        targetPort: 9102
        port: 9102
      {{- end }}
    kube-state-metrics:
      imagePullSecrets:
      - name: private-registry

  # TODO: DRY this up
  {{- if or .Values.gatekeeper.enabled .Values.istio.enabled }}
  dependsOn:
  {{- if .Values.istio.enabled }}
    - name: istio
      namespace: {{ .Release.Namespace }}
  {{- end }}
  {{- if .Values.gatekeeper.enabled }}
    - name: gatekeeper
      namespace: {{ .Release.Namespace }}
  {{- end }}
  {{- end }}
{{- end }}
