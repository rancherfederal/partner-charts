{{- if .Values.monitoring.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.monitoring "name" "monitoring" "defaults" (include "bigbang.defaults.monitoring" .)) }}
{{- end }}

{{- define "bigbang.defaults.monitoring" -}}
hostname: {{ .Values.hostname }}

flux:
  enabled: true

istio:
  enabled: {{ .Values.istio.enabled }}
  {{- if .Values.monitoring.sso.enabled }}
  prometheus:
    enabled: true
    service: authservice-haproxy-sso
    port: 8080
    namespace: authservice
  alertmanager:
    enabled: true
    service: authservice-haproxy-sso
    port: 8080
    namespace: authservice
  grafana:
    enabled: true
  {{- end }}

global:
  imagePullSecrets:
  - name: private-registry

sso:
  enabled: {{ .Values.monitoring.sso.enabled }}

grafana:
  image:
    pullSecrets:
    - private-registry

  grafana.ini:
    {{- if .Values.istio.enabled }}
    server:
      root_url: https://grafana.{{ .Values.hostname }}/
    {{- end }}

    auth:
      signout_redirect_url: {{ .Values.monitoring.sso.grafana.signout_redirect_url | default (tpl "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/logout" .) }}

    auth.generic_oauth:
      enabled: {{ .Values.monitoring.sso.enabled }}
      client_id: {{ .Values.monitoring.sso.grafana.client_id }}
      client_secret: {{ .Values.monitoring.sso.grafana.client_secret }}
      scopes: {{ .Values.monitoring.sso.grafana.scopes | default "openid profile email" }}
      auth_url: {{ .Values.monitoring.sso.grafana.auth_url | default (tpl .Values.sso.auth_url .) }}
      token_url: {{ .Values.monitoring.sso.grafana.token_url | default (tpl .Values.sso.token_url .) }}
      api_url: {{ .Values.monitoring.sso.grafana.api_url | default (tpl "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/userinfo" .) }}
      allow_sign_up: {{ .Values.monitoring.sso.grafana.allow_sign_up | default "True" }}
      role_attribute_path: {{ .Values.monitoring.sso.grafana.role_attribute_path | default "Viewer" }}
      allowed_domains: {{ .Values.monitoring.sso.grafana.allowed_domains }}

prometheus-node-exporter:
  serviceAccount:
    imagePullSecrets:
    - name: private-registry

  {{- if .Values.openshift }}
  service:
    targetPort: 9102
    port: 9102
  {{- end }}

kube-state-metrics:
  imagePullSecrets:
  - name: private-registry
{{- end -}}
